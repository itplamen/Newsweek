@model SearchResponseViewModel

@{
    ViewData["Title"] = string.IsNullOrWhiteSpace(Model.Search.Subcategory) ?
        Model.Search.Category :
        $"{Model.Search.Category}/{Model.Search.Subcategory}";
}

@section Styles {
    <link rel="stylesheet" href="~/css/news.css" />
}

<small class="lead">
    Showing
    <span class="font-weight-bolder">@Model.NewsCount</span>
    results for
    <span class="font-weight-bolder">@ViewData["Title"]</span>
</small>

<div class="album top-news">
    @{
        <div class="row">
            @foreach (var news in Model.News)
            {
                <partial name="_NewsPartial" model="news" />
            }
        </div>
    }
</div>

@if (Model.PagesCount > 1)
{
    <nav aria-label="News Pagination" id="pagination">
        <ul class="pagination justify-content-center">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link"
                       aria-label="Previous"
                       asp-controller="News"
                       asp-route-category="@Model.Search.Category"
                       asp-route-subcategory="@Model.Search.Subcategory"
                       asp-route-page="@Model.PreviousPage">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            }
            @{
                const int MorePagesToShow = 3;
                var pagesToShow = new List<int>();
                for (int i = 1; i <= MorePagesToShow; i++)
                {
                    pagesToShow.Add(i);
                }
                for (int i = Model.CurrentPage - MorePagesToShow; i <= Model.CurrentPage + MorePagesToShow; i++)
                {
                    if (i > 0)
                    {
                        pagesToShow.Add(i);
                    }
                }
                for (int i = Model.PagesCount - MorePagesToShow + 1; i <= Model.PagesCount; i++)
                {
                    if (i > 0)
                    {
                        pagesToShow.Add(i);
                    }
                }
                pagesToShow = pagesToShow.Where(x => x <= Model.PagesCount).Distinct().OrderBy(x => x).ToList();
            }
            @for (int i = 0; i < pagesToShow.Count; i++)
            {
                string className = string.Empty;
                int pageNumber = pagesToShow[i];

                if (pageNumber == Model.CurrentPage)
                {
                    className = "active";
                }
                if (i > 0 && pageNumber - 1 != pagesToShow[i - 1])
                {
                    <li class="page-item @className">
                        <a class="page-link"
                           asp-controller="News"
                           asp-route-category="@Model.Search.Category"
                           asp-route-subcategory="@Model.Search.Subcategory"
                           asp-route-page="@(pagesToShow[i - 1] + 1)">...</a>
                    </li>
                }
                <li class="page-item @className">
                    <a class="page-link"
                       asp-controller="News"
                       asp-route-category="@Model.Search.Category"
                       asp-route-subcategory="@Model.Search.Subcategory"
                       asp-route-page="@pageNumber">@pageNumber</a>
                </li>
            }
            @if (Model.CurrentPage < Model.PagesCount)
            {
                <li class="page-item">
                    <a class="page-link"
                       aria-label="Next"
                       asp-controller="News"
                       asp-route-category="@Model.Search.Category"
                       asp-route-subcategory="@Model.Search.Subcategory"
                       asp-route-page="@Model.NextPage">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            }
        </ul>
    </nav>
}