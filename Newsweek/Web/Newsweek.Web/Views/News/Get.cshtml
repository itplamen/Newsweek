@model NewsViewModel;

@{
    ViewData["Title"] = Model.Title;
}

@section Styles {
    <link rel="stylesheet" href="~/css/get-news.css" />
}

<div class="card mb-3">
    <div class="card-body">
        <h1 class="card-title">@Model.Title</h1>
        <div class="card-text">
            <div>
                <small class="text-muted news-source">
                    Source:
                    <span>
                        <a href="@Model.RemoteUrl">@Model.Source.Name</a>
                    </span>
                </small>
            </div>

            <div>
                <small class="text-muted news-created">
                    Created:
                    <span>
                        @Model.CreatedOn.ToString("dd/MM/yyyy HH:mm")
                    </span>
                </small>
            </div>

            <div>
                <small class="text-muted news-breadcrumb">
                    <span>
                        <a asp-controller="News" asp-action="Search" asp-route-category="@Model.Subcategory.Category.Name">
                            @Model.Subcategory.Category.Name
                        </a>
                    </span>/
                    <span>
                        <a asp-controller="News" asp-action="Search" asp-route-subcategory="@Model.Subcategory.Name">
                            @Model.Subcategory.Name
                        </a>
                    </span>/
                    <span class="active">@Model.Title</span>
                </small>
            </div>
        </div>

        @if (!string.IsNullOrEmpty(Model.MainImageUrl))
        {
            <img class="card-img-top" src="@Model.MainImageUrl" />
        }

        <p class="card-text"><small class="text-muted">@Html.Raw(Model.Description)</small></p>
        <div class="card-body">@Html.Raw(Model.Content)</div>
    </div>
</div>

<div class="modal fade" id="commentsUpdateModal" tabindex="-1" role="dialog" aria-labelledby="commentsUpdateModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Update Comment</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="commentIdUpdateModal" />

                <label for="commentComentUpdateModal">Content:</label>
                <textarea id="commentComentUpdateModal" maxlength="@ValidationConstants.COMMENT_MAX_CONTENT_LENGTH" class="form-control" rows="5"></textarea>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" id="saveUpdatedComment" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<partial name="_CommentsPartial" model="(Model.Id, Model.Comments)" />

@section Scripts {
    <script src="~/lib/jquery-ajax-unobtrusive/jquery.unobtrusive-ajax.min.js"></script>

    <script>
        function handleSuccesfulComment() {
            let commentsCount = parseInt($('#comments #comments-count').html(), 10);
            commentsCount += 1;

            $('#comments #comments-count').html(commentsCount);
            $('#addComment textarea').val('');
        }

        function handleFailedComment(xhr) {
            alert(xhr.responseText);
        }

        $('#comments').on('click', '.delete-commen-option', function () {
            let self = $(this);
            let id = $(this).parent().attr('data-comment-id');

            $.post('/Comments/Delete', { id: id })
                .done(function (isDeleted) {
                    if (isDeleted) {
                        let parent = self.parents('.card');
                        parent.remove();

                        let commentsCount = parseInt($('#comments #comments-count').html(), 10);
                        commentsCount -= 1;

                        $('#comments #comments-count').html(commentsCount)
                    }
                })
                .fail(function (data) {
                    alert(data.responseText);
                });
        });

        $('#comments').on('click', '.update-commen-option', function () {
            let id = $(this).parent().attr('data-comment-id');
            $('#commentIdUpdateModal').val(id);

            let content = $(this).parents('.card').find('.card-body .card-text:eq(1)').html();
            $('#commentComentUpdateModal').val(content);

            $('#commentsUpdateModal').modal('toggle');
        });

        $('#saveUpdatedComment').on('click', function () {
            $('#commentsUpdateModal').modal('toggle');

            let data = {
                id: $('#commentIdUpdateModal').val(),
                content: $('#commentComentUpdateModal').val()
            };

            $.post('/Comments/Update', data)
                .done(function (isUpdated) {
                    if (isUpdated) {
                        $('.card-options[data-comment-id=' + data.id + ']')
                            .siblings('.card-body')
                            .children('.card-text')
                            .html(data.content);
                    }
                })
                .fail(function (data) {
                    alert(data.responseText);
                });
        });
    </script>
}